c
continue
Rails.application.credentials.twilio_account_sid
 Rails.application.credentials.twilio_acc_id
c
continue
Rails.application.secrets.twilio_auth_token
 Rails.application.secrets.twilio_account_sid
Rails.application.secrets.twilio_account_sid
D
 Rails.application.secrets.twilio_account_sid
n
c
 Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_account_sid
4Rails.application.secrets.twilio_account_sid
continue
Rails.application.secrets.twilio_account_sid
c
Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_account_sid
continue
Rails.application.secrets.twilio_account_sid
  acc_id =  Rails.application.secrets.twilio_account_sid
continue
twilio_account_sid
Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_account_sid
c
twilio_account_sid
 Rails.application.secrets.twilio_account_sid
continue
Rails.application.secrets
continue
Rails.application.secrets.foo[:twilio_account_sid]
continue
Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_auth_tokrn
Rails.application.secrets.twilio_account_sid
Rails.application.secrets[:twilio_account_sid]
Rails.application.secrets
Rails.application.secrets.twilio_account_sid
twilio_account_sid
c
acc_id
c
Rails.application.secrets.twilio_account_sid
continue
acc_id =  Rails.application.secrets.twilio_account_sid
continue
Rails.application.secrets.twilio_auth_token
twilio_account_sid
 Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_account_sid
continue
twilio_account_sid
["twilio_account_sid"]
ENV["twilio_account_sid"]
twilio_account_sid
 Rails.application.secrets.twilio_account_sid
continue
 auth_token = ENV["twilio_auth_token"]
Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_account_sid
continue
 auth_token = ENV["twilio_auth_token"]
account_sid = ENV["twilio_account_sid"]
continue
undefined method `strip' for nil:NilClass
Twilio::REST::Client.new( Rails.application.secrets.twilio_account_sid,  Rails.application.secrets.twilio_auth_token)
continue
Rails.application.secrets.twilio_phone_number
 Rails.application.secrets.twilio_account_sid
continue
 Rails.application.secrets.twilio_phone_number
Rails.application.secrets.twilio_auth_token
Rails.application.secrets.twilio_account_sid
continue
:twilio_auth_token
:twilio_account_sid
Rails.application.secrets[:twilio_auth_token]
Rails.application.secrets[:twilio_account_sid]
c
account_id = Rails.application.credentials[:twilio_account_sid]
account_id = Rails.application.credentials.secrets[:twilio_account_sid]
c
Rails.application.credentials[:twilio_account_sid]
account_id
c
\c
c
twilio_auth_token
twilio_account_sid
continue
ENV[twilio_auth_token]
ENV[twilio_account_sid]
c
Rails.application.secrets.twilio_phone_number
twilio_phone_number
c
Rails.application.secrets.twilio_phone_number,
Rails.application.secrets.auth_token
account_sid
Rails.application.secrets.account_sid
continue
twilio_phone_number
auth_token
account_sid
c
@client.account.messages.create(options.merge!({from: @t_phone}))
@t_phone
c
message
c
 @message = message
message
c
n
message
 TwilioTextMessenger.new(message).call
n
@user.name
n
c
n
c
continue
n
c
continue
@user = User.find(params[:id])
c
delete "/users/#{user.id}" , headers: @headers
c
continue
n
c
continue
n
c
continue
n
c
@user.destroy
c
 @user = User.find(params[:id])
c
"/users/#{user.id}"
@headers
c
continue
cc
n
c
cc
c
 @user.destroy 
c
 @user = User.find(params[:id])
c
"/users/#{user.id}"
@headers
c
  @user 
   @user.destroy  
c
response.body
response
n
c
 @user = User.find(params[:id])
@user.destroy
c
@user
c
delete "/users/#{user.id}" , headers: @headers
c
delete "/users/#{user.id}" , headers: @headers
c
 @headers
"/users/#{user.id}"
c
continue
c
@user.destroy
4 @user.destroy
 @user
c
"/users/#{user.id}"
@headers 
c
continue
c
User.find(params[:id])
 @user 
c
"/users/#{user.id}"
@headers
c
params[:id]
@user
c
"/users/#{user.id}"
c
 user.id
continue
user_id
continue
@user
@user = User.find(params[:id])
c
continue
 @user
c
put "/users/#{user.id}",   headers: @headers , params: {username: "rahul@1234" , password:"332333", email: "rahul@gmail.com"}
params
params:
continue
params: 
c
continue
 delete "/users/#{user.id}",  headers:  @headers 
@headers
continue
@headers 
@headers
@\headers
error
response.body
response
c
@user.destroy 
c
 @user = User.find(params[:id])
c
continue
@user = User.find(params[:id])
:id
c
"/users/#{user.id}"
continue
:id
 @user = User.find(params[:id])
c
n
m
n
"/users/#{user.id}"
continue
delete "/users/#{user.id}",   headers: @headers
delete "/users/#{user.id}"
"/users/#{user.id}"
continue
response.body
response
@headers
